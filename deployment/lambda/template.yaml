AWSTemplateFormatVersion: "2010-09-09"
Transform: AWS::Serverless-2016-10-31
Description: "Disclosure Evaluator Lambda Function"

Globals:
  Function:
    Timeout: 900
    MemorySize: 2048
    Runtime: python3.12
    Environment:
      Variables:
        LOG_LEVEL: INFO
        LOG_FORMAT: json
        ENABLE_STRUCTURED_LOGGING: "true"
        ENABLE_PARALLEL_PROCESSING: "true"
        MAX_CONCURRENT_WORKERS: "5"
        MAX_RETRY_ATTEMPTS: "3"
        FILE_SIZE_LIMIT: "52428800" # 50MB
        API_RATE_LIMIT_DELAY: "0.1"
        RETRY_DELAY_SECONDS: "30"
        EXPONENTIAL_BACKOFF: "true"
        MAX_BATCH_SIZE: "100"
        BATCH_TIMEOUT_SECONDS: "1800"
        ENABLE_METRICS: "true"
        METRICS_NAMESPACE: "DisclosureEvaluator"

Parameters:
  OpenAIApiKey:
    Type: String
    NoEcho: true
    Description: OpenAI API Key
    Default: ""

  AnthropicApiKey:
    Type: String
    NoEcho: true
    Description: Anthropic API Key
    Default: ""

  S3BucketName:
    Type: String
    Description: S3 bucket for batch state storage
    Default: ""

  UseS3ForStatus:
    Type: String
    Description: Use S3 for status storage
    Default: "false"
    AllowedValues: ["true", "false"]

  EnableApiKeyAuth:
    Type: String
    Description: Enable API key authentication
    Default: "false"
    AllowedValues: ["true", "false"]

  AllowedApiKeys:
    Type: String
    Description: Comma-separated list of allowed API keys
    Default: ""

Resources:
  # S3 Bucket for batch state storage
  BatchStateBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "${AWS::StackName}-batch-state-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      LifecycleConfiguration:
        Rules:
          - Id: DeleteOldVersions
            Status: Enabled
            ExpirationInDays: 30
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # Lambda function
  DisclosureEvaluatorFunction:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: !Sub "${AWS::StackName}-disclosure-evaluator"
      CodeUri: ../../
      Handler: api/lambda_handler.lambda_handler
      Description: "Disclosure evaluation Lambda function"
      Timeout: 900
      MemorySize: 2048
      Environment:
        Variables:
          FUNCTION_NAME: !Ref DisclosureEvaluatorFunction
          FUNCTION_VERSION: "1.0.0"
          AWS_REGION: !Ref AWS::Region
          S3_BUCKET_NAME: !Ref BatchStateBucket
          USE_S3_FOR_STATUS: !Ref UseS3ForStatus
          OPENAI_API_KEY: !Ref OpenAIApiKey
          ANTHROPIC_API_KEY: !Ref AnthropicApiKey
          ENABLE_API_KEY_AUTH: !Ref EnableApiKeyAuth
          ALLOWED_API_KEYS: !Ref AllowedApiKeys
      Policies:
        - S3CrudPolicy:
            BucketName: !Ref BatchStateBucket
        - CloudWatchLogsFullAccess
        - CloudWatchMetricsFullAccess
      Events:
        # API Gateway event
        ApiGatewayEvent:
          Type: Api
          Properties:
            Path: /{proxy+}
            Method: ANY
            RestApiId: !Ref DisclosureEvaluatorApi
        # Direct invocation event
        DirectInvocationEvent:
          Type: Schedule
          Properties:
            Schedule: rate(1 day)
            Enabled: false

  # API Gateway
  DisclosureEvaluatorApi:
    Type: AWS::Serverless::Api
    Properties:
      Name: !Sub "${AWS::StackName}-disclosure-evaluator-api"
      StageName: prod
      Cors:
        AllowMethods: "'GET,POST,PUT,DELETE,OPTIONS'"
        AllowHeaders: "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,X-Amz-Security-Token'"
        AllowOrigin: "'*'"
      Auth:
        ApiKeyRequired: false
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: Disclosure Evaluator API
          version: 1.0.0
        paths:
          /health:
            get:
              summary: Health check
              responses:
                "200":
                  description: OK
          /evaluation:
            post:
              summary: Evaluate document
              responses:
                "200":
                  description: OK
          /batch:
            post:
              summary: Submit batch evaluation
              responses:
                "202":
                  description: Accepted
          /batch/{batch_id}:
            get:
              summary: Get batch status
              responses:
                "200":
                  description: OK
          /batch/{batch_id}/results:
            get:
              summary: Get batch results
              responses:
                "200":
                  description: OK
          /status/{request_id}:
            get:
              summary: Get request status
              responses:
                "200":
                  description: OK

  # CloudWatch Log Group
  DisclosureEvaluatorLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub "/aws/lambda/${DisclosureEvaluatorFunction}"
      RetentionInDays: 30

  # CloudWatch Alarms
  ErrorRateAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-error-rate"
      AlarmDescription: "High error rate in disclosure evaluator"
      MetricName: Errors
      Namespace: AWS/Lambda
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref DisclosureEvaluatorFunction

  DurationAlarm:
    Type: AWS::CloudWatch::Alarm
    Properties:
      AlarmName: !Sub "${AWS::StackName}-duration"
      AlarmDescription: "High duration in disclosure evaluator"
      MetricName: Duration
      Namespace: AWS/Lambda
      Statistic: Average
      Period: 300
      EvaluationPeriods: 2
      Threshold: 600000 # 10 minutes in milliseconds
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: FunctionName
          Value: !Ref DisclosureEvaluatorFunction

Outputs:
  FunctionName:
    Description: "Lambda Function Name"
    Value: !Ref DisclosureEvaluatorFunction
    Export:
      Name: !Sub "${AWS::StackName}-FunctionName"

  FunctionArn:
    Description: "Lambda Function ARN"
    Value: !GetAtt DisclosureEvaluatorFunction.Arn
    Export:
      Name: !Sub "${AWS::StackName}-FunctionArn"

  ApiUrl:
    Description: "API Gateway URL"
    Value: !Sub "https://${DisclosureEvaluatorApi}.execute-api.${AWS::Region}.amazonaws.com/prod"
    Export:
      Name: !Sub "${AWS::StackName}-ApiUrl"

  S3BucketName:
    Description: "S3 Bucket for batch state storage"
    Value: !Ref BatchStateBucket
    Export:
      Name: !Sub "${AWS::StackName}-S3BucketName"

  LogGroupName:
    Description: "CloudWatch Log Group Name"
    Value: !Ref DisclosureEvaluatorLogGroup
    Export:
      Name: !Sub "${AWS::StackName}-LogGroupName"
